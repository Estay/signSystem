@model SAS.Models.Merchant_info

@{
    ViewBag.Title = "用户管理";
    ViewBag.my_user = "set";
    ViewBag.url = "/Bill/QureyBill?hotelId=" + ViewBag.curentHotelId + "&startTime=" + ViewBag.curentstartTime + "&endTime=" + ViewBag.curentendTime + "&page=";
    //酒店列表
    Dictionary<string, string> hotels = ViewData["dates"] as Dictionary<string, string>;

}

 
           

<div id="content" class="box_a">
    <div class="from_path">
        <table cellspacing="0">
            <tbody>
                <tr>
                    <th>用户名</th>
                    <th>公寓权限</th>
                    <th>模块权限</th>
                    <th>操作</th>
                </tr>
                
                @foreach (var m in Model.List_Mer)
                {
                        <!-- 表格数据 -->
                 <tr>
                    <td>@m.name</td>
                    <td>@m.limitHotelName</td>
                    <td>@m.limitName</td>
                    <td>
                        <a href="">修改</a>&#124;<a href="">删除</a>
                    </td>
                 </tr>
        
                }
                @if(Model.List_Mer.Count()==0)
                {
                <!-- 没有数据 -->
                <tr>
                    <td colspan="4">没有用户</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
@using (Html.BeginForm("CreateUser", "user", FormMethod.Post))
{
    <div id="editor_user" class="from_path">
        <span class="btn_d set">创建用户</span>
        <div class="box_b">
            <!-- 隐藏input -->
            <input type="text" class="hide">
            <input type="text" class="hide">
            <input type="text" class="hide">

            <p class="input_line">
                <label><span class="label">真实姓名</span><input type="text" name="@Html.DisplayNameFor(model => model.name)" class="w150" value="@Model.name"><span class="col_red">*</span></label>
                <label><span class="label">登录密码</span><input type="password"  name="@Html.DisplayNameFor(model => model.password)" class="w150" value="@(Model.password == "" ||Model.password==null? "" : "******")"><span class="col_red">*</span></label>
                <label><span class="label">确认登录密码</span><input type="password"  name="@Html.DisplayNameFor(model => model.password)"  class="w150" value="@(Model.password == "" || Model.password==null ? "" : "******")"><span class="col_red">*</span></label>
            </p>
            <p class="input_line">
                <label><span class="label">电话号码</span><input type="text" class="w150" name="@Html.DisplayNameFor(model => model.tel)" value="@Model.tel"><span class="col_red">*</span></label>
                <span class="label">短信接收时间</span>
                <select class="w150" name="@Html.DisplayNameFor(model => model.startTime)">
                    
                        @for (int i = 0; i < 24; i++)
                        {
                           <option value="@i" @( Model.startTime == i? "selected" : "")>@Convert.ToInt32(i)</option> 
                        }
                    </select>
                    <span>到</span>
                    <select class="w150" name="@Html.DisplayNameFor(model => model.endTime)">
                       @for (int i = 0; i < 24; i++)
                        {
                            <option value="@i" @( Model.endTime == i? "selected" : "")>@Convert.ToInt32(i)</option> 
                        }
                    </select>
                <span class="col_red">*</span>
            </p>
            <p class="input_line">
                <span class="label">性别</span>
                <label><input type="radio" @((Model.Sex == "" || Model.Sex == "0")? "checked" : "" ) name="@Html.DisplayNameFor(model => model.Sex)" value="0"><span>男</span></label>
                <label><input type="radio" @(Model.Sex == "1"?"checked":"") name="@Html.DisplayNameFor(model => model.Sex)" value="1"><span>女</span></label>
            </p>
            <div class="clear">
                <div class="float_l">
                    <p class="input_line">
                        <span class="label">公寓权限</span>
                    </p>
                </div>
                    <div class="float_l checkbox_box">
                    <p class="input_line"><a class="all_set" href="">全选</a><a class="reverse_set" href="">反选</a></p>
                    <!-- 公寓权限input -->
                    <input class="hide multiple_values" type="text" name="@Html.DisplayNameFor(model => model.limitHotelId)" value="@Model.limitHotelId">
                    <input class="hide multiple_texts" type="text" name="@Html.DisplayNameFor(model => model.limitHotelName)" value="@Model.limitHotelName">
                    <p class="input_line">
                        <!-- 列出公寓 -->
                        @foreach (var h in Model.List_hotel)
                        {
                          <label class="w_sn">
                            <input class="multiple2" type="checkbox" name="h" value="@h.hotel_id")><span title="@h.h_name_cn">@h.h_name_cn</span>
                         </label>
                        }
                    </p>
                </div>
            </div>
            <div class="clear">
                <div class="float_l">
                    <p class="input_line">
                        <span class="label">操作权限</span>
                    </p>
                </div>
                <div class="float_l checkbox_box">
                    <p class="input_line"><a class="all_set" href="">全选</a><a class="reverse_set" href="">反选</a></p>
                    <!-- 操作权限input -->
                    <input class="hide multiple_values" type="text" name="@Html.DisplayNameFor(model => model.limit)" value="@Model.limit">
                    <input class="hide multiple_texts" type="text" name="@Html.DisplayNameFor(model => model.limitName)" value="@Model.limitName">
                    <p class="input_line">
                        @foreach (var m in Model.List_Menu)
                        {
                             <!-- 列出操作 -->
                        <label class="w_sn">
                            <input class="multiple2" type="checkbox" name="c" value="@m.id"><span title="@m.title">@m.title</span>
                        </label>
                        }
                    </p>
                </div>
            </div>
             <a href="javascript:document.forms[0].submit()" class="btn_b  checking_btn" id="btn_add_user">添加</a>
        </div>
        
    </div>
            
}    
</div>
<input type="text" id="word_failure" value="@ViewBag.sign">



<!-- 日期控件 -->
<script type="text/javascript" src="@Url.Content("~/Content/public/script/laydate/laydate.dev.js")"></script>
<script>
    // 比较xxxx-xx-xx格式的日期
    function comparisonDate(start, end) {
        if (!start || !end) {
            return;
        };
        var start_arr = start.split("-"),
            end_arr = end.split("-"),
            startTime = new Date(),
            endTime = new Date();
        startTime.setFullYear(start_arr[0]);
        startTime.setMonth(start_arr[1] - 1);
        startTime.setDate(start_arr[2]);
        startTime.setHours(0);
        startTime.setMinutes(0);
        startTime.setSeconds(0);
        startTime = startTime.setMilliseconds(0);
        endTime.getTime();
        endTime.setFullYear(end_arr[0]);
        endTime.setMonth(end_arr[1] - 1);
        endTime.setDate(end_arr[2]);
        endTime.setHours(0);
        endTime.setMinutes(0);
        endTime.setSeconds(0);
        endTime.setMilliseconds(0);
        endTime = endTime.getTime();
        return startTime - endTime;
    }

    var end_node = document.getElementsByClassName('date_end')[0],
        start_node = document.getElementsByClassName('date_start')[0];

    var start = {
        elem: '#double_date .date_start',
        //min: laydate.now(), //设定最小日期为当前日期
        istoday: false,
        choose: function (datas) {
            end.min = datas; //开始日选好后，重置结束日的最小日期
            end.start = datas //将结束日的初始值设定为开始日
            if (comparisonDate(start_node.value, end_node.value) > 0) {
                end_node.value = start_node.value;
            };
        }
    };
    var end = {
        elem: '#double_date .date_end',
        //min: laydate.now(),
        istoday: false,
        choose: function (datas) {
            //start.max = datas; //结束日选好后，充值开始日的最大日期
            if (comparisonDate(start_node.value, end_node.value) > 0) {
                start_node.value = end_node.value;
            };
        }
    };
    laydate(start);
    laydate(end);
</script>